com.treb.reviewsearcher.MainActivity -> com.treb.reviewsearcher.MainActivity:
    com.treb.reviewsearcher.SearchResultArrayAdapter searchResultArrayAdapter -> a
    android.app.ProgressDialog progressDialog -> b
    void <init>() -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void displayProgressMessage(java.lang.String,android.os.AsyncTask) -> a
    void hideProgressDialog() -> a
    void showSearchResults(java.util.ArrayList) -> a
    void searchForProduct(java.lang.String) -> a
    void showToast(java.lang.String) -> b
    void access$000(com.treb.reviewsearcher.MainActivity) -> a
    android.app.ProgressDialog access$100(com.treb.reviewsearcher.MainActivity) -> b
    com.treb.reviewsearcher.SearchResultArrayAdapter access$200(com.treb.reviewsearcher.MainActivity) -> c
com.treb.reviewsearcher.MainActivity$1 -> com.treb.reviewsearcher.a:
    com.treb.reviewsearcher.MainActivity this$0 -> a
    void <init>(com.treb.reviewsearcher.MainActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.treb.reviewsearcher.MainActivity$2 -> com.treb.reviewsearcher.b:
    com.treb.reviewsearcher.MainActivity this$0 -> a
    void <init>(com.treb.reviewsearcher.MainActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.treb.reviewsearcher.MainActivity$3 -> com.treb.reviewsearcher.c:
    com.treb.reviewsearcher.MainActivity this$0 -> a
    void <init>(com.treb.reviewsearcher.MainActivity) -> <init>
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.treb.reviewsearcher.MainActivity$4 -> com.treb.reviewsearcher.d:
    android.os.AsyncTask val$cancellableTask -> a
    com.treb.reviewsearcher.MainActivity this$0 -> b
    void <init>(com.treb.reviewsearcher.MainActivity,android.os.AsyncTask) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.treb.reviewsearcher.MainActivity$5 -> com.treb.reviewsearcher.e:
    com.treb.reviewsearcher.MainActivity this$0 -> a
    void <init>(com.treb.reviewsearcher.MainActivity) -> <init>
    void run() -> run
com.treb.reviewsearcher.MainActivity$6 -> com.treb.reviewsearcher.f:
    com.treb.reviewsearcher.MainActivity this$0 -> a
    void <init>(com.treb.reviewsearcher.MainActivity) -> <init>
    void run() -> run
com.treb.reviewsearcher.MainActivity$7 -> com.treb.reviewsearcher.g:
    java.lang.String val$message -> a
    com.treb.reviewsearcher.MainActivity this$0 -> b
    void <init>(com.treb.reviewsearcher.MainActivity,java.lang.String) -> <init>
    void run() -> run
com.treb.reviewsearcher.RefinmentSelection -> com.treb.reviewsearcher.h:
    com.treb.reviewsearcher.RefinmentSelection ALL -> a
    com.treb.reviewsearcher.RefinmentSelection MOVIES -> b
    com.treb.reviewsearcher.RefinmentSelection GAMES -> c
    com.treb.reviewsearcher.RefinmentSelection ALBUMS -> d
    com.treb.reviewsearcher.RefinmentSelection TV_SHOWS -> e
    com.treb.reviewsearcher.RefinmentSelection PERSON -> f
    com.treb.reviewsearcher.RefinmentSelection TRAILERS -> g
    com.treb.reviewsearcher.RefinmentSelection COMPANIES -> h
    java.lang.String value -> i
    java.lang.String searchQuery -> j
    com.treb.reviewsearcher.RefinmentSelection[] $VALUES -> k
    com.treb.reviewsearcher.RefinmentSelection[] values() -> values
    com.treb.reviewsearcher.RefinmentSelection valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,java.lang.String,java.lang.String) -> <init>
    java.lang.String getSearchQuery() -> a
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
com.treb.reviewsearcher.Review -> com.treb.reviewsearcher.i:
    java.lang.String title -> a
    java.lang.Integer metaScore -> b
    java.lang.String platform -> c
    java.util.Date releaseDate -> d
    java.lang.String url -> e
    void <init>() -> <init>
    void setTitle(java.lang.String) -> a
    java.lang.String getTitle() -> a
    void setMetaScore(java.lang.Integer) -> a
    java.lang.Integer getMetaScore() -> b
    void setPlatform(java.lang.String) -> b
    java.lang.String getPlatform() -> c
    java.lang.String getUrl() -> d
    void setUrl(java.lang.String) -> c
    java.lang.String toString() -> toString
    java.util.Date getReleaseDate() -> e
    void setReleaseDate(java.util.Date) -> a
com.treb.reviewsearcher.SearchResultArrayAdapter -> com.treb.reviewsearcher.j:
    com.treb.reviewsearcher.MainActivity activity -> a
    java.text.DateFormat df -> b
    void <init>(com.treb.reviewsearcher.MainActivity,java.util.List) -> <init>
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    com.treb.reviewsearcher.MainActivity access$100(com.treb.reviewsearcher.SearchResultArrayAdapter) -> a
com.treb.reviewsearcher.SearchResultArrayAdapter$1 -> com.treb.reviewsearcher.k:
    com.treb.reviewsearcher.SearchResultArrayAdapter this$0 -> a
    void <init>(com.treb.reviewsearcher.SearchResultArrayAdapter) -> <init>
    void onClick(android.view.View) -> onClick
com.treb.reviewsearcher.SearchResultArrayAdapter$ViewHolder -> com.treb.reviewsearcher.l:
    android.widget.TextView score -> a
    android.widget.TextView title -> b
    android.widget.TextView releaseDate -> c
    android.widget.TextView platform -> d
    com.treb.reviewsearcher.Review review -> e
    void <init>() -> <init>
    void <init>(byte) -> <init>
com.treb.reviewsearcher.productReview.DetailedProductReview -> com.treb.reviewsearcher.productReview.a:
    java.lang.Double userScore -> a
    java.lang.String summary -> b
    android.graphics.Bitmap thumbnail -> c
    java.lang.String criticReviewUrl -> d
    java.lang.String userReviewUrl -> e
    java.lang.Integer criticReviewCount -> f
    java.lang.Integer userReviewCount -> g
    java.util.List criticReviews -> h
    java.util.List userReviews -> i
    void <init>() -> <init>
    com.treb.reviewsearcher.productReview.DetailedProductReview FromReview(com.treb.reviewsearcher.Review) -> a
    java.lang.Double getUserScore() -> f
    void setUserScore(java.lang.Double) -> a
    java.lang.String getSummary() -> g
    void setSummary(java.lang.String) -> d
    void setThumbnailBitMap(android.graphics.Bitmap) -> a
    android.graphics.Bitmap getThumbnail() -> h
    java.lang.Integer getCriticReviewCount() -> i
    void setCriticReviewCount(java.lang.Integer) -> b
    java.lang.Integer getUserReviewCount() -> j
    void setUserReviewCount(java.lang.Integer) -> c
com.treb.reviewsearcher.productReview.DetailedProductReviewLoader -> com.treb.reviewsearcher.productReview.b:
    com.treb.reviewsearcher.productReview.ProductReviewActivity activity -> a
    com.treb.reviewsearcher.productReview.DetailedProductReview detailedProductReview -> b
    java.text.DateFormat df -> c
    void <init>(com.treb.reviewsearcher.productReview.ProductReviewActivity) -> <init>
    com.treb.reviewsearcher.productReview.DetailedProductReview doInBackground(com.treb.reviewsearcher.Review[]) -> a
    java.lang.Integer getTotalReviews(org.w3c.dom.Document,javax.xml.xpath.XPath,java.lang.String) -> a
    java.lang.String getValueOfNode(org.w3c.dom.Document,javax.xml.xpath.XPath,java.lang.String) -> b
    void setThumbnailBitMap(android.graphics.Bitmap) -> a
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.treb.reviewsearcher.productReview.ImageLoader -> com.treb.reviewsearcher.productReview.c:
    com.treb.reviewsearcher.productReview.DetailedProductReviewLoader loader -> a
    void <init>(com.treb.reviewsearcher.productReview.DetailedProductReviewLoader) -> <init>
    android.graphics.Bitmap doInBackground(java.lang.String[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.treb.reviewsearcher.productReview.ProductReviewActivity -> com.treb.reviewsearcher.productReview.ProductReviewActivity:
    java.text.DateFormat df -> a
    com.treb.reviewsearcher.Review review -> b
    android.widget.TextView userScore -> c
    android.widget.TextView summary -> d
    android.widget.TextView platform -> e
    android.widget.TextView criticReviews -> f
    android.widget.TextView userReviews -> g
    android.widget.ImageView thumbnail -> h
    android.app.ProgressDialog progressDialog -> i
    void <init>() -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    void updateProgress(com.treb.reviewsearcher.productReview.DetailedProductReview,boolean) -> a
    android.text.SpannableString getUnderlinedString(java.lang.String) -> a
    com.treb.reviewsearcher.Review access$000(com.treb.reviewsearcher.productReview.ProductReviewActivity) -> a
com.treb.reviewsearcher.productReview.ProductReviewActivity$1 -> com.treb.reviewsearcher.productReview.d:
    com.treb.reviewsearcher.productReview.ProductReviewActivity this$0 -> a
    void <init>(com.treb.reviewsearcher.productReview.ProductReviewActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.treb.reviewsearcher.productReview.ProductReviewActivity$2 -> com.treb.reviewsearcher.productReview.e:
    com.treb.reviewsearcher.productReview.ProductReviewActivity this$0 -> a
    void <init>(com.treb.reviewsearcher.productReview.ProductReviewActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.treb.reviewsearcher.productReview.ProductReviewActivity$3 -> com.treb.reviewsearcher.productReview.f:
    com.treb.reviewsearcher.productReview.ProductReviewActivity this$0 -> a
    void <init>(com.treb.reviewsearcher.productReview.ProductReviewActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.treb.reviewsearcher.productsearcher.GoogleSearcher -> com.treb.reviewsearcher.a.a:
    com.treb.reviewsearcher.MainActivity activity -> a
    void <init>(com.treb.reviewsearcher.MainActivity) -> <init>
    java.lang.String doInBackground(java.lang.String[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.treb.reviewsearcher.productsearcher.MetacriticSearcher -> com.treb.reviewsearcher.a.b:
    java.util.regex.Pattern pattern -> a
    com.treb.reviewsearcher.MainActivity activity -> b
    com.treb.reviewsearcher.RefinmentSelection refinmentSelection -> c
    void <init>(com.treb.reviewsearcher.MainActivity,com.treb.reviewsearcher.RefinmentSelection) -> <init>
    java.lang.String cleanupSearchName(java.lang.String) -> a
    java.lang.String getSearchURL(com.treb.reviewsearcher.RefinmentSelection,java.lang.String) -> a
    java.util.ArrayList doInBackground(java.lang.String[]) -> a
    java.lang.String getValueOfNode(org.w3c.dom.Document,javax.xml.xpath.XPath,java.lang.String) -> a
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void <clinit>() -> <clinit>
com.treb.reviewsearcher.scanner.IntentIntegrator -> com.treb.reviewsearcher.b.a:
    java.lang.String TAG -> h
    java.util.Collection PRODUCT_CODE_TYPES -> a
    java.util.Collection ONE_D_CODE_TYPES -> b
    java.util.Collection QR_CODE_TYPES -> c
    java.util.Collection DATA_MATRIX_TYPES -> d
    java.util.Collection ALL_CODE_TYPES -> e
    java.util.Collection TARGET_BARCODE_SCANNER_ONLY -> f
    java.util.Collection TARGET_ALL_KNOWN -> g
    android.app.Activity activity -> i
    java.lang.String title -> j
    java.lang.String message -> k
    java.lang.String buttonYes -> l
    java.lang.String buttonNo -> m
    java.util.Collection targetApplications -> n
    void <init>(android.app.Activity) -> <init>
    android.app.AlertDialog initiateScan(java.util.Collection) -> a
    java.lang.String findTargetAppPackage(android.content.Intent) -> a
    com.treb.reviewsearcher.scanner.IntentResult parseActivityResult(int,int,android.content.Intent) -> a
    android.app.Activity access$000(com.treb.reviewsearcher.scanner.IntentIntegrator) -> a
    java.lang.String access$100() -> a
    void <clinit>() -> <clinit>
com.treb.reviewsearcher.scanner.IntentIntegrator$1 -> com.treb.reviewsearcher.b.b:
    com.treb.reviewsearcher.scanner.IntentIntegrator this$0 -> a
    void <init>(com.treb.reviewsearcher.scanner.IntentIntegrator) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.treb.reviewsearcher.scanner.IntentIntegrator$2 -> com.treb.reviewsearcher.b.c:
    com.treb.reviewsearcher.scanner.IntentIntegrator this$0 -> a
    void <init>(com.treb.reviewsearcher.scanner.IntentIntegrator) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.treb.reviewsearcher.scanner.IntentResult -> com.treb.reviewsearcher.b.d:
    java.lang.String contents -> a
    java.lang.String formatName -> b
    byte[] rawBytes -> c
    java.lang.Integer orientation -> d
    java.lang.String errorCorrectionLevel -> e
    void <init>() -> <init>
    void <init>(java.lang.String,java.lang.String,byte[],java.lang.Integer,java.lang.String) -> <init>
    java.lang.String getContents() -> a
    java.lang.String toString() -> toString
org.htmlcleaner.BaseToken -> a.a.a:
org.htmlcleaner.CleanerProperties -> a.a.b:
    org.htmlcleaner.ITagInfoProvider tagInfoProvider -> a
    boolean advancedXmlEscape -> b
    boolean transResCharsToNCR -> c
    boolean useCdataForScriptAndStyle -> d
    boolean translateSpecialEntities -> e
    boolean transSpecialEntitiesToNCR -> f
    boolean recognizeUnicodeChars -> g
    boolean omitUnknownTags -> h
    boolean treatUnknownTagsAsContent -> i
    boolean omitDeprecatedTags -> j
    boolean treatDeprecatedTagsAsContent -> k
    boolean omitComments -> l
    boolean omitXmlDeclaration -> m
    boolean omitDoctypeDeclaration -> n
    boolean omitHtmlEnvelope -> o
    boolean useEmptyElementTags -> p
    boolean allowMultiWordAttributes -> q
    boolean allowHtmlInsideAttributes -> r
    boolean ignoreQuestAndExclam -> s
    boolean namespacesAware -> t
    java.lang.String hyphenReplacementInComment -> u
    java.lang.String pruneTags -> v
    java.lang.String booleanAttributeValues -> w
    void <init>() -> <init>
org.htmlcleaner.CleanerTransformations -> a.a.c:
    java.util.Map mappings -> a
    boolean hasTransformationForTag(java.lang.String) -> a
    org.htmlcleaner.TagTransformation getTransformation(java.lang.String) -> b
org.htmlcleaner.CommentNode -> a.a.d:
    java.lang.StringBuilder content -> a
    void <init>(java.lang.String) -> <init>
    java.lang.StringBuilder getContent() -> a
    java.lang.String toString() -> toString
org.htmlcleaner.ContentNode -> a.a.e:
    java.lang.StringBuilder content -> a
    void <init>(char[],int) -> <init>
    java.lang.String toString() -> toString
org.htmlcleaner.DefaultTagProvider -> a.a.f:
    org.htmlcleaner.DefaultTagProvider _instance -> a
    org.htmlcleaner.DefaultTagProvider getInstance() -> a
    void <init>() -> <init>
    org.htmlcleaner.TagInfo getTagInfo(java.lang.String) -> a
org.htmlcleaner.DoctypeToken -> a.a.g:
    java.lang.String part1 -> a
    java.lang.String part2 -> b
    java.lang.String part3 -> c
    java.lang.String part4 -> d
    void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    java.lang.String clean(java.lang.String) -> a
    java.lang.String toString() -> toString
org.htmlcleaner.DomSerializer -> a.a.h:
    org.htmlcleaner.CleanerProperties props -> a
    boolean escapeXml -> b
    void <init>(org.htmlcleaner.CleanerProperties) -> <init>
    void <init>(org.htmlcleaner.CleanerProperties,byte) -> <init>
    org.w3c.dom.Document createDOM(org.htmlcleaner.TagNode) -> a
    org.w3c.dom.Element createElement(org.htmlcleaner.TagNode,org.w3c.dom.Document) -> a
    void setAttributes(org.htmlcleaner.TagNode,org.w3c.dom.Element) -> a
    void createSubnodes(org.w3c.dom.Document,org.w3c.dom.Element,java.util.List) -> a
org.htmlcleaner.EndTagToken -> a.a.i:
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
    void setAttribute(java.lang.String,java.lang.String) -> a
org.htmlcleaner.HtmlCleaner -> a.a.j:
    java.lang.String DEFAULT_CHARSET -> a
    org.htmlcleaner.CleanerProperties properties -> b
    org.htmlcleaner.ITagInfoProvider tagInfoProvider -> c
    org.htmlcleaner.CleanerTransformations transformations -> d
    void <init>() -> <init>
    void <init>(byte) -> <init>
    org.htmlcleaner.TagNode clean(java.io.Reader) -> a
    org.htmlcleaner.TagNode createTagNode(java.lang.String,org.htmlcleaner.HtmlCleaner$CleanTimeValues) -> b
    org.htmlcleaner.TagNode makeTagNodeCopy(org.htmlcleaner.TagNode,org.htmlcleaner.HtmlCleaner$CleanTimeValues) -> a
    void calculateRootNode(org.htmlcleaner.HtmlCleaner$CleanTimeValues) -> a
    void addAttributesToTag(org.htmlcleaner.TagNode,java.util.Map) -> a
    boolean isAllowedInLastOpenTag(org.htmlcleaner.BaseToken,org.htmlcleaner.HtmlCleaner$CleanTimeValues) -> a
    void saveToLastOpenTag(java.util.List,org.htmlcleaner.BaseToken,org.htmlcleaner.HtmlCleaner$CleanTimeValues) -> a
    boolean isStartToken(java.lang.Object) -> a
    void makeTree(java.util.List,java.util.ListIterator,org.htmlcleaner.HtmlCleaner$CleanTimeValues) -> a
    void createDocumentNodes(java.util.List,org.htmlcleaner.HtmlCleaner$CleanTimeValues) -> a
    java.util.List closeSnippet(java.util.List,org.htmlcleaner.HtmlCleaner$TagPos,java.lang.Object,org.htmlcleaner.HtmlCleaner$CleanTimeValues) -> a
    void closeAll(java.util.List,org.htmlcleaner.HtmlCleaner$CleanTimeValues) -> b
    void addPossibleHeadCandidate(org.htmlcleaner.TagInfo,org.htmlcleaner.TagNode,org.htmlcleaner.HtmlCleaner$CleanTimeValues) -> a
    org.htmlcleaner.ITagInfoProvider access$000(org.htmlcleaner.HtmlCleaner) -> a
    org.htmlcleaner.TagNode access$1400$552569db(java.lang.String,org.htmlcleaner.HtmlCleaner$CleanTimeValues) -> a
    void <clinit>() -> <clinit>
org.htmlcleaner.HtmlCleaner$1 -> a.a.k:
    org.htmlcleaner.HtmlCleaner$CleanTimeValues val$cleanTimeValues -> a
    org.htmlcleaner.HtmlCleaner this$0 -> b
    void <init>(org.htmlcleaner.HtmlCleaner,java.io.Reader,org.htmlcleaner.CleanerProperties,org.htmlcleaner.CleanerTransformations,org.htmlcleaner.ITagInfoProvider,org.htmlcleaner.HtmlCleaner$CleanTimeValues) -> <init>
    void makeTree(java.util.List) -> a
    org.htmlcleaner.TagNode createTagNode(java.lang.String) -> a
org.htmlcleaner.HtmlCleaner$CleanTimeValues -> a.a.l:
    org.htmlcleaner.HtmlCleaner$OpenTags _openTags -> b
    boolean _headOpened -> c
    boolean _bodyOpened -> d
    java.util.Set _headTags -> e
    java.util.Set allTags -> f
    org.htmlcleaner.TagNode htmlNode -> g
    org.htmlcleaner.TagNode bodyNode -> h
    org.htmlcleaner.TagNode headNode -> i
    org.htmlcleaner.TagNode rootNode -> j
    java.util.Set pruneTagSet -> k
    java.util.Set pruneNodeSet -> l
    org.htmlcleaner.HtmlCleaner this$0 -> a
    void <init>(org.htmlcleaner.HtmlCleaner) -> <init>
    void <init>(org.htmlcleaner.HtmlCleaner,byte) -> <init>
    org.htmlcleaner.HtmlCleaner$OpenTags access$402(org.htmlcleaner.HtmlCleaner$CleanTimeValues,org.htmlcleaner.HtmlCleaner$OpenTags) -> a
    boolean access$602(org.htmlcleaner.HtmlCleaner$CleanTimeValues,boolean) -> a
    boolean access$702(org.htmlcleaner.HtmlCleaner$CleanTimeValues,boolean) -> b
    java.util.Set access$800(org.htmlcleaner.HtmlCleaner$CleanTimeValues) -> a
    java.util.Set access$900(org.htmlcleaner.HtmlCleaner$CleanTimeValues) -> b
    org.htmlcleaner.TagNode access$1002(org.htmlcleaner.HtmlCleaner$CleanTimeValues,org.htmlcleaner.TagNode) -> a
    org.htmlcleaner.TagNode access$1102(org.htmlcleaner.HtmlCleaner$CleanTimeValues,org.htmlcleaner.TagNode) -> b
    org.htmlcleaner.TagNode access$1202(org.htmlcleaner.HtmlCleaner$CleanTimeValues,org.htmlcleaner.TagNode) -> c
    org.htmlcleaner.TagNode access$1302(org.htmlcleaner.HtmlCleaner$CleanTimeValues,org.htmlcleaner.TagNode) -> d
    org.htmlcleaner.TagNode access$1200(org.htmlcleaner.HtmlCleaner$CleanTimeValues) -> c
    org.htmlcleaner.TagNode access$1000(org.htmlcleaner.HtmlCleaner$CleanTimeValues) -> d
    org.htmlcleaner.TagNode access$1100(org.htmlcleaner.HtmlCleaner$CleanTimeValues) -> e
    java.util.Set access$1500(org.htmlcleaner.HtmlCleaner$CleanTimeValues) -> f
    org.htmlcleaner.TagNode access$1300(org.htmlcleaner.HtmlCleaner$CleanTimeValues) -> g
    java.util.Set access$1600(org.htmlcleaner.HtmlCleaner$CleanTimeValues) -> h
    org.htmlcleaner.HtmlCleaner$OpenTags access$400(org.htmlcleaner.HtmlCleaner$CleanTimeValues) -> i
    boolean access$600(org.htmlcleaner.HtmlCleaner$CleanTimeValues) -> j
    boolean access$700(org.htmlcleaner.HtmlCleaner$CleanTimeValues) -> k
org.htmlcleaner.HtmlCleaner$OpenTags -> a.a.m:
    java.util.List list -> b
    org.htmlcleaner.HtmlCleaner$TagPos last -> c
    java.util.Set set -> d
    org.htmlcleaner.HtmlCleaner this$0 -> a
    void <init>(org.htmlcleaner.HtmlCleaner) -> <init>
    boolean isEmpty() -> a
    org.htmlcleaner.HtmlCleaner$TagPos findTag(java.lang.String) -> a
    void <init>(org.htmlcleaner.HtmlCleaner,byte) -> <init>
    boolean access$1700(org.htmlcleaner.HtmlCleaner$OpenTags,java.lang.String) -> a
    org.htmlcleaner.HtmlCleaner$TagPos access$1800(org.htmlcleaner.HtmlCleaner$OpenTags,java.lang.String) -> b
    java.util.List access$2000(org.htmlcleaner.HtmlCleaner$OpenTags) -> a
    org.htmlcleaner.HtmlCleaner$TagPos access$2100(org.htmlcleaner.HtmlCleaner$OpenTags) -> b
    org.htmlcleaner.HtmlCleaner$TagPos access$2200(org.htmlcleaner.HtmlCleaner$OpenTags) -> c
    boolean access$2300(org.htmlcleaner.HtmlCleaner$OpenTags) -> d
    boolean access$2400(org.htmlcleaner.HtmlCleaner$OpenTags,java.util.Set) -> a
    boolean access$2500(org.htmlcleaner.HtmlCleaner$OpenTags,java.lang.String) -> c
    void access$2600(org.htmlcleaner.HtmlCleaner$OpenTags,java.lang.String,int) -> a
    void access$2700(org.htmlcleaner.HtmlCleaner$OpenTags,java.lang.String) -> d
    org.htmlcleaner.HtmlCleaner$TagPos access$2800(org.htmlcleaner.HtmlCleaner$OpenTags) -> e
org.htmlcleaner.HtmlCleaner$TagPos -> a.a.n:
    int position -> b
    java.lang.String name -> c
    org.htmlcleaner.TagInfo info -> d
    org.htmlcleaner.HtmlCleaner this$0 -> a
    void <init>(org.htmlcleaner.HtmlCleaner,int,java.lang.String) -> <init>
    java.lang.String access$100(org.htmlcleaner.HtmlCleaner$TagPos) -> a
    org.htmlcleaner.TagInfo access$200(org.htmlcleaner.HtmlCleaner$TagPos) -> b
    int access$1900(org.htmlcleaner.HtmlCleaner$TagPos) -> c
org.htmlcleaner.HtmlCleanerException -> a.a.o:
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
org.htmlcleaner.HtmlTokenizer -> a.a.p:
    java.io.BufferedReader _reader -> a
    char[] _working -> b
    int _pos -> c
    int _len -> d
    char[] _saved -> e
    int _savedLen -> f
    org.htmlcleaner.DoctypeToken _docType -> g
    org.htmlcleaner.TagToken _currentTagToken -> h
    java.util.List _tokenList -> i
    boolean _asExpected -> j
    boolean _isScriptContext -> k
    org.htmlcleaner.CleanerProperties props -> l
    boolean isOmitUnknownTags -> m
    boolean isTreatUnknownTagsAsContent -> n
    boolean isOmitDeprecatedTags -> o
    boolean isTreatDeprecatedTagsAsContent -> p
    boolean isNamespacesAware -> q
    boolean isOmitComments -> r
    boolean isAllowMultiWordAttributes -> s
    boolean isAllowHtmlInsideAttributes -> t
    org.htmlcleaner.CleanerTransformations transformations -> u
    org.htmlcleaner.ITagInfoProvider tagInfoProvider -> v
    java.lang.StringBuilder commonStr -> w
    void <init>(java.io.Reader,org.htmlcleaner.CleanerProperties,org.htmlcleaner.CleanerTransformations,org.htmlcleaner.ITagInfoProvider) -> <init>
    void addToken(org.htmlcleaner.BaseToken) -> a
    void makeTree(java.util.List) -> a
    org.htmlcleaner.TagNode createTagNode(java.lang.String) -> a
    void readIfNeeded(int) -> a
    java.util.List getTokenList() -> a
    void go() -> d
    void go(int) -> b
    boolean startsWith(java.lang.String) -> b
    boolean startsWithSimple(java.lang.String) -> c
    boolean isWhitespaceSafe() -> e
    boolean isChar(int,char) -> a
    boolean isCharSimple(char) -> a
    boolean isCharEquals(char) -> b
    boolean isIdentifierStartChar(int) -> c
    boolean isValidXmlCharSafe() -> f
    boolean isAllRead() -> g
    void save(char) -> c
    void saveCurrent() -> h
    void saveCurrentSafe() -> i
    void skipWhitespaces() -> j
    boolean addSavedAsContent() -> k
    void start() -> b
    boolean isReservedTag(java.lang.String) -> d
    void tagEnd() -> l
    java.lang.String identifier() -> m
    void tagAttributes() -> n
    java.lang.String attributeValue() -> o
    boolean content() -> p
    void ignoreUntil(char) -> d
    void comment() -> q
    org.htmlcleaner.DoctypeToken getDocType() -> c
org.htmlcleaner.ITagInfoProvider -> a.a.q:
    org.htmlcleaner.TagInfo getTagInfo(java.lang.String) -> a
org.htmlcleaner.SpecialEntity -> a.a.r:
    java.util.Map entities -> a
    int maxEntityLength -> b
    java.lang.String key -> c
    int intCode -> d
    void addEntity(java.lang.String,int) -> a
    org.htmlcleaner.SpecialEntity getEntity(java.lang.String) -> a
    int getMaxEntityLength() -> a
    void <init>(java.lang.String,int) -> <init>
    char getCharacter() -> b
    java.lang.String getDecimalNCR() -> c
    void <clinit>() -> <clinit>
org.htmlcleaner.TagInfo -> a.a.s:
    java.lang.String name -> a
    int contentType -> b
    java.util.Set mustCloseTags -> c
    java.util.Set higherTags -> d
    java.util.Set childTags -> e
    java.util.Set permittedTags -> f
    java.util.Set copyTags -> g
    java.util.Set continueAfterTags -> h
    int belongsTo -> i
    java.lang.String requiredParent -> j
    java.lang.String fatalTag -> k
    boolean deprecated -> l
    boolean unique -> m
    boolean ignorePermitted -> n
    void <init>(java.lang.String,int,int,boolean,boolean,boolean) -> <init>
    void defineFatalTags(java.lang.String) -> a
    void defineRequiredEnclosingTags(java.lang.String) -> b
    void defineForbiddenTags(java.lang.String) -> c
    void defineAllowedChildrenTags(java.lang.String) -> d
    void defineHigherLevelTags(java.lang.String) -> e
    void defineCloseBeforeCopyInsideTags(java.lang.String) -> f
    void defineCloseInsideCopyAfterTags(java.lang.String) -> g
    void defineCloseBeforeTags(java.lang.String) -> h
    java.util.Set getPermittedTags() -> a
    java.lang.String getRequiredParent() -> b
    java.lang.String getFatalTag() -> c
    boolean isDeprecated() -> d
    boolean isUnique() -> e
    boolean isIgnorePermitted() -> f
    boolean allowsBody() -> g
    boolean isHigher(java.lang.String) -> i
    boolean isCopy(java.lang.String) -> j
    boolean hasCopyTags() -> h
    boolean isContinueAfter(java.lang.String) -> k
    boolean hasPermittedTags() -> i
    boolean isHeadTag() -> j
    boolean isHeadAndBodyTag() -> k
    boolean isMustCloseTag(org.htmlcleaner.TagInfo) -> a
    boolean allowsItem(org.htmlcleaner.BaseToken) -> a
    boolean allowsAnything() -> l
org.htmlcleaner.TagNode -> a.a.t:
    org.htmlcleaner.TagNode parent -> b
    java.util.Map attributes -> c
    java.util.List children -> d
    org.htmlcleaner.DoctypeToken docType -> e
    java.util.Map nsDeclarations -> f
    java.util.List itemsToMove -> g
    boolean isFormed -> h
    void <init>(java.lang.String) -> <init>
    java.lang.String getAttributeByName(java.lang.String) -> a
    java.util.Map getAttributes() -> a
    void setAttribute(java.lang.String,java.lang.String) -> a
    void addNamespaceDeclaration(java.lang.String,java.lang.String) -> b
    java.util.Map getNamespaceDeclarations() -> b
    java.util.List getChildren() -> c
    java.util.List getChildTagList() -> d
    java.lang.StringBuffer getText() -> e
    org.htmlcleaner.TagNode getParent() -> f
    void setDocType(org.htmlcleaner.DoctypeToken) -> a
    void addChild(java.lang.Object) -> a
    void addChildren(java.util.List) -> a
    java.util.List getElementList(org.htmlcleaner.TagNode$ITagNodeCondition,boolean) -> a
    java.util.List getAllElementsList$30a3ae68() -> g
    java.util.List getElementListByName$15e38f0e(java.lang.String) -> b
    java.lang.Object[] evaluateXPath(java.lang.String) -> c
    boolean removeFromTree() -> h
    boolean removeChild(java.lang.Object) -> b
    void addItemForMoving(org.htmlcleaner.BaseToken) -> a
    java.util.List getItemsToMove() -> i
    void setItemsToMove$61fb9e66() -> j
    boolean isFormed() -> k
    void setFormed$1385ff() -> l
    void transformAttributes(org.htmlcleaner.TagTransformation) -> a
    java.lang.String getNamespaceURIOnPath(java.lang.String) -> d
    org.htmlcleaner.TagNode makeCopy() -> m
org.htmlcleaner.TagNode$ITagNodeCondition -> a.a.u:
    boolean satisfy(org.htmlcleaner.TagNode) -> a
org.htmlcleaner.TagNode$TagAllCondition -> a.a.v:
    org.htmlcleaner.TagNode this$0 -> a
    void <init>(org.htmlcleaner.TagNode) -> <init>
    boolean satisfy(org.htmlcleaner.TagNode) -> a
org.htmlcleaner.TagNode$TagNodeNameCondition -> a.a.w:
    java.lang.String name -> b
    org.htmlcleaner.TagNode this$0 -> a
    void <init>(org.htmlcleaner.TagNode,java.lang.String) -> <init>
    boolean satisfy(org.htmlcleaner.TagNode) -> a
org.htmlcleaner.TagToken -> a.a.x:
    java.lang.String name -> a
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
    java.lang.String getName() -> n
    java.lang.String toString() -> toString
    void setAttribute(java.lang.String,java.lang.String) -> a
org.htmlcleaner.TagTransformation -> a.a.y:
    java.lang.String destTag -> a
    boolean preserveSourceAttributes -> b
    java.util.Map attributeTransformations -> c
    boolean hasAttributeTransformations() -> a
    java.lang.String getDestTag() -> b
    boolean isPreserveSourceAttributes() -> c
    java.util.Map getAttributeTransformations() -> d
org.htmlcleaner.Utils -> a.a.z:
    java.lang.String VAR_START -> a
    java.lang.String VAR_END -> b
    java.util.Map RESERVED_XML_CHARS -> c
    boolean isValidXmlChar(char) -> a
    boolean isReservedXmlChar(char) -> c
    boolean isValidInt(java.lang.String,int) -> a
    java.lang.String escapeXml$5f7b1514(java.lang.String,org.htmlcleaner.CleanerProperties) -> a
    boolean isIdentifierHelperChar(char) -> b
    java.lang.String evaluateTemplate(java.lang.String,java.util.Map) -> a
    java.lang.String getXmlNSPrefix(java.lang.String) -> a
    java.lang.String getXmlName(java.lang.String) -> b
    void <clinit>() -> <clinit>
org.htmlcleaner.XPather -> a.a.aa:
    java.lang.String[] tokenArray -> a
    void <init>(java.lang.String) -> <init>
    java.lang.Object[] evaluateAgainstNode(org.htmlcleaner.TagNode) -> a
    java.util.Collection evaluateAgainst(java.util.Collection,int,int,boolean,int,int,boolean,java.util.Collection) -> a
    java.lang.String flatten(int,int) -> a
    boolean isValidInteger(java.lang.String) -> a
    boolean isValidDouble(java.lang.String) -> b
    boolean isIdentifier(java.lang.String) -> c
    java.util.Collection evaluateFunction(java.util.Collection,int,int,int,int,boolean) -> a
    boolean isToken(java.lang.String,int) -> a
    int findClosingIndex(int,int) -> b
    java.util.Collection singleton(java.lang.Object) -> a
    java.util.Collection getElementsByName(java.util.Collection,int,int,boolean,boolean) -> a
    boolean evaluateLogic(java.util.Collection,java.util.Collection,java.lang.String) -> a
    java.lang.String toText(java.lang.Object) -> b
org.htmlcleaner.XPatherException -> a.a.ab:
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
